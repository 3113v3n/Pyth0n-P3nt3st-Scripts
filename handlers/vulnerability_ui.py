from .file_handler import FileHandler


class VulnerabilityInterface:
    def __init__(self) -> None:

        pass

    def user_interaction(validator, color, filemanager: FileHandler):
        print("Running Vulnerability Analysis on your file\n")

        # while True:

        #     try:
        #         input_filename = input(
        #             "\n[+] Please provide a full path to the file you want to analyze: [CSV]\n"
        #         )
        #         # check if provided file exists
        #         if validator.file_exists(input_filename):
        #             # check if the file provided is of required extension
        #             if validator.check_filetype(input_filename, "csv"):
        #                 # Exit the loop if file is valid
        #                 break
        #             else:
        #                 raise ValueError("Invalid file extension, only accepting CSV ")
        #         else:
        #             raise FileNotFoundError("File Does not Exists")
        #     except FileNotFoundError as error:
        #         print(f"{color.FAIL}\n[!]{error}{color.ENDC}")

        #     except ValueError as error:
        #         print(f"{color.FAIL}\n[!]{error}{color.ENDC}")

        multiple_files = input(
            "Would you like to analyze multiple files ? [ Yes => multiple | No => single file ]\n"
        ).lower()

        if multiple_files == "yes" or multiple_files == "y":
            print("Scanning Multiple files")
            search_dir =input("\nEnter Location Where all your files are located \n")
            # Display all available CSV files
            filemanager.display_saved_files(search_dir,display_csv=True1)

        # Proceed to get the output filename
        output_filename = input("[+] Provide a name for your output file: ")

        return {
            "input_file": multiple_files,  # input_filename,
            "output": output_filename,
        }
