from .file_handler import FileHandler


class VulnerabilityInterface:
    def __init__(self) -> None:

        pass

    def user_interaction(validator, color, filemanager: FileHandler):
        print("Running Vulnerability Analysis on your file\n")

        while True:
            multiple_files = (
                input(
                    f"Would you like to analyze multiple files ? [ {color.OKGREEN}Yes{color.ENDC} => multiple | {color.OKGREEN}No{color.ENDC} => single file ]\n"
                )
                .strip()
                .lower()
            )
            if multiple_files in {"yes", "y"}:
                while True:

                    try:
                        search_dir = input(
                            "\nEnter Location Where all your files are located \n"
                        ).strip()
                        if not validator.check_folder_exists(search_dir):
                            raise ValueError("No Such Folder exists")

                        files_tuple = filemanager.display_saved_files(
                            search_dir, display_csv=True
                        )
                        
                        if files_tuple:
                            # Display all available CSV files

                            output_filename = input(
                                "[+] Provide a name for your output file: "
                            ).strip()

                            return {
                                "input_file": files_tuple,  # input_filename,
                                "output": output_filename,
                            }
                        else:
                            raise FileExistsError(
                                "No Files Present in the provided Directory"
                            )

                    except (FileExistsError, ValueError) as error:
                        print(f"{color.FAIL}\n[!]{error}{color.ENDC}")

            else:

                try:
                    input_filename = input(
                        "\n[+] Please provide a full path to the file you want to analyze: [CSV]\n"
                    ).strip()
                    # check if provided file exists
                    if not validator.file_exists(input_filename):
                        # check if the file provided is of required extension
                        raise FileNotFoundError("File Does not Exists")
                    
                    if not validator.check_filetype(input_filename, "csv"):
                        # Exit the loop if file is valid
                        raise ValueError("Invalid file extension, only accepting CSV ")
                    
                    # Proceed to get the output filename
                    output_filename = input("[+] Provide a name for your output file: ")

                    return {
                        "input_file": input_filename,  # input_filename,
                        "output": output_filename,
                    }
                except (FileNotFoundError, ValueError) as error:
                    print(f"{color.FAIL}\n[!]{error}{color.ENDC}")
